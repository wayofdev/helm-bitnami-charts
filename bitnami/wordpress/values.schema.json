{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "wordpressUsername": {
      "type": "string",
      "title": "Username",
      "form": true
    },
    "wordpressPassword": {
      "type": "string",
      "title": "Password",
      "form": true,
      "description": "Defaults to a random 10-character alphanumeric string if not set"
    },
    "wordpressEmail": {
      "type": "string",
      "title": "Admin email",
      "form": true
    },
    "wordpressBlogName": {
      "type": "string",
      "title": "Blog Name",
      "form": true
    },
    "persistence": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "title": "Persistent Volume Size",
          "form": true,
          "render": "slider",
          "sliderMin": 1,
          "sliderMax": 100,
          "sliderUnit": "Gi"
        }
      }
    },
    "mariadb": {
      "type": "object",
      "title": "MariaDB Details",
      "form": true,
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Use a new MariaDB database hosted in the cluster",
          "form": true,
          "description": "Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database switch this off and configure the external database details"
        },
        "primary": {
          "type": "object",
          "properties": {
            "persistence": {
              "type": "object",
              "properties": {
                "size": {
                  "type": "string",
                  "title": "Volume Size",
                  "form": true,
                  "hidden": {
                    "value": false,
                    "path": "mariadb/enabled"
                  },
                  "render": "slider",
                  "sliderMin": 1,
                  "sliderMax": 100,
                  "sliderUnit": "Gi"
                }
              }
            }
          }
        }
      }
    },
    "externalDatabase": {
      "type": "object",
      "title": "External Database Details",
      "description": "If MariaDB is disabled. Use this section to specify the external database details",
      "form": true,
      "properties": {
        "host": {
          "type": "string",
          "form": true,
          "title": "Database Host",
          "hidden": "mariadb/enabled"
        },
        "user": {
          "type": "string",
          "form": true,
          "title": "Database Username",
          "hidden": "mariadb/enabled"
        },
        "password": {
          "type": "string",
          "form": true,
          "title": "Database Password",
          "hidden": "mariadb/enabled"
        },
        "database": {
          "type": "string",
          "form": true,
          "title": "Database Name",
          "hidden": "mariadb/enabled"
        },
        "port": {
          "type": "integer",
          "form": true,
          "title": "Database Port",
          "hidden": "mariadb/enabled"
        }
      }
    },
    "ingress": {
      "type": "object",
      "form": true,
      "title": "Ingress Configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "form": true,
          "title": "Use a custom hostname",
          "description": "Enable the ingress resource that allows you to access the WordPress installation."
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "hidden": {
            "value": false,
            "path": "ingress/enabled"
          }
        },
        "tls": {
          "type": "boolean",
          "form": true,
          "title": "Create a TLS secret",
          "hidden": {
            "value": false,
            "path": "ingress/enabled"
          }
        }
      }
    },
    "service": {
      "type": "object",
      "form": true,
      "title": "Service Configuration",
      "properties": {
        "type": {
          "type": "string",
          "form": true,
          "title": "Service Type",
          "description": "Allowed values: \"ClusterIP\", \"NodePort\" and \"LoadBalancer\""
        }
      }
    },
    "resources": {
      "type": "object",
      "title": "Required Resources",
      "description": "Configure resource requests",
      "form": true,
      "properties": {
        "requests": {
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "Memory Request",
              "sliderMin": 10,
              "sliderMax": 2048,
              "sliderUnit": "Mi"
            },
            "cpu": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "CPU Request",
              "sliderMin": 10,
              "sliderMax": 2000,
              "sliderUnit": "m"
            }
          }
        }
      }
    },
    "volumePermissions": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "form": true,
          "title": "Enable Init Containers",
          "description": "Use an init container to set required folder permissions on the data volume before mounting it in the final destination"
        }
      }
    },
    "metrics": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Metrics",
          "description": "Prometheus Exporter / Metrics",
          "form": true
        }
      }
    },
    "cronJobs": {
      "type": "object",
      "title": "Cron Jobs Configuration",
      "properties": {
        "scheduler": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable Scheduler Cron Job",
              "form": true
            },
            "schedule": {
              "type": "string",
              "title": "Scheduler Schedule",
              "form": true
            },
            "command": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Scheduler Command",
              "form": true
            },
            "args": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Scheduler Arguments",
              "form": true
            },
            "containerSecurityContext": {
              "type": "object",
              "title": "Container Security Context",
              "form": true,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "title": "Enable Container Security Context",
                  "form": true
                },
                "runAsUser": {
                  "type": "integer",
                  "title": "Run As User",
                  "form": true
                },
                "runAsNonRoot": {
                  "type": "boolean",
                  "title": "Run As Non Root",
                  "form": true
                },
                "privileged": {
                  "type": "boolean",
                  "title": "Privileged",
                  "form": true
                },
                "readOnlyRootFilesystem": {
                  "type": "boolean",
                  "title": "Read-Only Root Filesystem",
                  "form": true
                },
                "allowPrivilegeEscalation": {
                  "type": "boolean",
                  "title": "Allow Privilege Escalation",
                  "form": true
                },
                "capabilities": {
                  "type": "object",
                  "title": "Capabilities",
                  "form": true,
                  "properties": {
                    "drop": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Capabilities to Drop",
                      "form": true
                    }
                  }
                },
                "seccompProfile": {
                  "type": "object",
                  "title": "Seccomp Profile",
                  "form": true,
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Seccomp Profile Type",
                      "form": true
                    }
                  }
                }
              }
            },
            "podAnnotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "Pod Annotations",
              "form": true
            },
            "podLabels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "Pod Labels",
              "form": true
            },
            "failedJobsHistoryLimit": {
              "type": "integer",
              "title": "Failed Jobs History Limit",
              "form": true
            },
            "successfulJobsHistoryLimit": {
              "type": "integer",
              "title": "Successful Jobs History Limit",
              "form": true
            },
            "concurrencyPolicy": {
              "type": "string",
              "title": "Concurrency Policy",
              "form": true
            },
            "backoffLimit": {
              "type": "integer",
              "title": "Backoff Limit",
              "form": true
            },
            "initContainer": {
              "type": "object",
              "title": "Init Container Configuration",
              "form": true,
              "properties": {
                "image": {
                  "type": "object",
                  "title": "Init Container Image",
                  "form": true,
                  "properties": {
                    "registry": {
                      "type": "string",
                      "title": "Image Registry",
                      "form": true
                    },
                    "repository": {
                      "type": "string",
                      "title": "Image Repository",
                      "form": true
                    },
                    "tag": {
                      "type": "string",
                      "title": "Image Tag",
                      "form": true
                    },
                    "digest": {
                      "type": "string",
                      "title": "Image Digest",
                      "form": true
                    },
                    "pullPolicy": {
                      "type": "string",
                      "title": "Image Pull Policy",
                      "form": true
                    },
                    "pullSecrets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Image Pull Secrets",
                      "form": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
